{"pageProps":{"slug":"pros-and-cons-of-microservices","article":{"id":4384,"post_date":"2020-05-29 15:08:54","seo_title":"Building Microservices: Pros and Cons of Implementation","seo_description":"Learn about the microservices pros and cons, the challenges of building microservices, and what to consider when scaling microservice architecture.","seo_keywords":"","seo_image":"https://pixelplex.io/wp-content/uploads/2020/05/pros-and-cons-of-microservices-main-1600-upd-1.jpg","title":"What Are Advantages & Disadvantages of Microservices Architecture?","category":{"slug":"web-development","term_id":150,"name":"Web Dev"},"date":"20200513","baseline":"The isolated microservice architecture contributes to the overall application stability and reliability. Many factors should be considered, however, upon deciding on when to use microservices over monolith.","image":{"url":"https://pixelplex.io/wp-content/uploads/2020/05/pros-and-cons-of-microservices-main-1600-upd-1.jpg","alt":"A person carrying a block made of cubes","resized":{"480x360":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-480x360.jpg","560x240":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-560x240.jpg","690x517":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-690x517.jpg","1000x510":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-1000x510.jpg"}},"sections":[{"acf_fc_layout":"imagewithcite","image":{"url":"https://pixelplex.io/wp-content/uploads/2020/05/pros-and-cons-of-microservices-main-1600-upd-1.jpg","alt":"A person carrying a block made of cubes","resized":{"480x360":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-480x360.jpg","560x240":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-560x240.jpg","690x517":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-690x517.jpg","1000x510":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-1000x510.jpg"}},"cite":""},{"acf_fc_layout":"row","content":[{"acf_fc_layout":"textbox","text":"<p id=\"introduction\">The software industry is rapidly advancing to meet the various demands and requirements of the businesses and the common man alike. Making an application that does not just satisfy clients but is also readily scalable and ensures top-notch availability is hugely dependent on the application architecture that your software is built on.</p>\n<p>We wanted to provide our guide to microservices as an application architecture that promises to improve the overall quality of modern apps. There are many issues to consider before making the choice between monolithic and microservice architecture. Team management, performance monitoring, and quality assurance are among those on the list. Read on to find out more about microservices pros and cons and when to use them to ensure your software’s high performance.</p>\n<h3>Key Takeaways</h3>\n<p>Read further if you would like to:</p>\n<ul>\n<li>Get a closer look at what microservices are and the ways they could be implemented.</li>\n<li>Understand when to use microservices and what to consider before implementing them.</li>\n<li>Learn about how to scale with microservices and the challenges that come along with it.</li>\n</ul>\n<h2 id=\"in-depth-microservices-overview\">In-Depth Microservices Overview</h2>\n<p>Microservices or the microservice architecture is an application architecture that was designed to ensure high maintainability and testability, independent deployability, and loose coupling. Despite its hype in the modern software industry, it is not the silver bullet to solve all problems, as microservices also have their drawbacks.</p>\n<p>Microservices architecture is based on the idea to divide an application into its components (features) and each component is an independent unit in the whole process. The core principle of building microservices is that a given service should not overlap with other services or have any shared data storage. By staying true to this principle, microservices provide a layer of abstraction and isolation between services in a system.</p>\n<p>Taking a high-level microservices overview, there are mainly two architecture types:</p>\n<ul>\n<li><strong>Stateless microservices</strong> is the most common case scenario, where you do not maintain any session state between requests. They are also the ideal candidates for distributed systems and lead to much less complex and more maintainable systems. This means that if one service is removed then the overall process to achieve a certain task does not get affected.</li>\n<li><strong>Stateful microservices</strong> store session information to enable communication between two or more microservices. Although the state introduces some complexity, there are situations when it is necessary, for example maintaining state is ideal in situations where there are multiple database round trips.</li>\n</ul>\n<p><img src=\"https://backend.pixelplex.io/wp-content/uploads/2020/05/stateless-vs-stateful-services-scaled.jpg\" alt=\"The scheme reflects stateless and stateful services\" width=\"2048\" height=\"1574\" /></p>\n<figure><figcaption>Differences between stateless and stateful microservice architecture</figcaption></figure>\n<p>The microservices pros and cons vary for each type, however, there are a few common characteristics that make this architecture an ideal solution to modern development problems. These are:</p>\n<ul>\n<li><strong>Independent deployment and versioning</strong>. As microservices are well-isolated, they can be tested, deployed, and versioned individually. This allows you to think about the business logic of just one service rather than having to worry about the whole application altogether.</li>\n<li><strong>Efficient team organization</strong>. There is a widely accepted understanding that it is best to organize teams around business capabilities rather than by specific technologies. With microservices, this becomes easily possible. So for example, in an e-commerce application, you can organize teams for authentication, shipping, order, inventory, etc. separately and maintain a healthy and balanced communication structure.</li>\n<li><strong>Fault tolerance</strong>. No solution works to optimum conditions forever. Things change and sometimes we make mistakes. Since each service is isolated, it is easier to handle issues like hardware failure or implementation errors and any others that the application could face.</li>\n<li><strong>Concealed implementation details</strong>. To prevent tight coupling it is often considered better to keep any implementation details hidden from the consumer. This provides a layer of abstraction between the service and the consumer.</li>\n<li><strong>Decentralized data storage</strong>. Each service must have access to its database. This ensures the availability of each service, and also makes it possible to choose specific types of databases depending on the goals of the service, for example, a service could rely on a NoSQL or SQL database.</li>\n</ul>\n<p>Monolithic architecture is something that is often <a href=\"https://pixelplex.io/blog/monolithic-vs-microservices/\">compared to microservices</a>. It is important to understand that each architectural style has its own merits.</p>\n<h2 id=\"when-to-use-microservices-and-why-not-go-with-monolithic\">When to Use Microservices and Why not go with Monolithic?</h2>\n<p><img src=\"https://backend.pixelplex.io/wp-content/uploads/2020/05/when-to-use-microservice-architecture-scaled.jpg\" alt=\"The scheme compares monolithic and microservice architectures\" width=\"2048\" height=\"1574\" /></p>\n<p>Some people are looking into microservices because they want to transition from a monolithic architecture to a microservices architecture and are not sure how to decompose the monolith. Others are at the initial phase where they’ve chosen to go with building microservices and are wondering how to ensure data consistency.</p>\n<p>Regardless of the group, first and foremost application owners need to understand if monolithic architecture really poses a problem. A monolithic architecture might be more suitable for the initial phases of a project since building microservices may be a very complex solution in terms of the infrastructure. This is why if you are on a really tight deadline, you might want to go with the monolithic approach.</p>\n<p>Other challenges faced while building microservices are:</p>\n<ul>\n<li><strong>Operational teams will struggle</strong>. In a monolith, there is just one codebase and all the logic of that application resides in that codebase. This is not true for microservices, so monitoring and managing the application as a whole will tend to be more difficult.</li>\n<li><strong>Monitoring the application is more difficult</strong> as everything is less stable and there are many more dependencies. Using Docker containerization introduces a layer of abstraction that brings you more control over the processes.</li>\n<li><strong>Testing scenarios are drastically constrained</strong> as it is difficult to pinpoint the many possible ways of how a service could interact with other services. This makes testing, writing test cases, and applying changes more difficult.</li>\n</ul>\n<h2 id=\"scaling-microservices-tradeoff-for-versatility\">Scaling Microservices: The Tradeoff for Versatility</h2>\n<p><img src=\"https://backend.pixelplex.io/wp-content/uploads/2020/05/how-to-scale-microservices-scaled.jpg\" alt=\"The scaling process of microservices\" width=\"2048\" height=\"1574\" /></p>\n<p>The microservices architecture is very versatile and scaling with it is a challenging task. In a single monolithic application that more or less runs from a single server, you can easily handle a higher demand by allocating more resources or run new instances of the application to balance the load better.</p>\n<p>Scaling microservices can involve multiple stages. The first challenge is to correctly identify which components in the application are facing an increase in demand. Then you must ensure that whatever changes you make to the components won’t affect their compatibility with the rest of the system. So there are three factors that you need to take note of here:</p>\n<ul>\n<li><strong>Resource Allocation</strong>. The hardware properties that build up your systems like RAM and CPU specs are finite. Resource allocation is a challenge because prioritizing these resources to services appropriately is a difficult task. You will need to identify the parts of your application that have the highest demands. For example, if your application serves businesses and individuals, then businesses might need to be prioritized over individuals.</li>\n<li><strong>Performance</strong>. Measuring and monitoring the overall application performance is another difficult task because services run and handle requests in isolation. An application delivery controller is the ideal candidate for measuring and monitoring the end-user performance.</li>\n<li><strong>Timing your upgrades</strong>. All the services of the entire system should never be upgraded during the same maintenance period. This does not mean that all services should be upgraded individually. Instead, a realistic way to go about this would be to upgrade related services together.</li>\n</ul>\n<p>Scaling in microservices is not just concerned with the individual system when a service is upscaled. Instead, that service should upscale both individually and as part of the system.</p>\n<h2 id=\"conclusion\">Summary</h2>\n<p>Hope you have a better understanding of the microservices now that you know:</p>\n<ul>\n<li>The Microservice architecture is a service-oriented application architecture that maintains decentralization to ensure high testability, efficient management, independent versioning, and deployment.</li>\n<li>Microservices are classified into two types: stateful where session state is stored for example during multiple database round trips, and stateless where you do not maintain any state.</li>\n<li>Regardless of the type of microservices, the common characteristics they share are decentralization, fault tolerance, versioning, and concealed implementation details.</li>\n<li>While scaling microservices, it is important to consider resource allocation, optimal timing for updates, and performance to guarantee a successful upscale and ensure your application does not degrade.</li>\n</ul>\n<h2>Resources</h2>\n<p>Interested in reading more? Check out these links:</p>\n<ul>\n<li><a href=\"https://www.manning.com/books/microservices-patterns\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">Microservices Patterns: With Examples In Java</a>. If you are familiar with Java and the Spring framework, then this is a must-read to understand the problems with the monolithic approach and how to implement a microservice architecture that scales well.</li>\n<li><a href=\"https://www.amazon.com/Building-Microservices-Designing-Fine-Grained-Systems-ebook/dp/B00T3N7XB4\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">Building Microservices: Designing Fine-Grained Systems</a>. This book explains microservices and the modern distributed systems architecture, along with the issues of the monolithic approach.</li>\n</ul>\n"}]}],"required_time_to_read_the_news":"","show_contact_block":false,"default_prefix":"","author":{"name":"Alex Zakharenkov","photo":"https://pixelplex.io/wp-content/uploads/2021/08/a.zakharenkov.jpg","description":"Copywriter","social_networks":false,"internal_url":"","seo_title":"","seo_description":"","seo_keywords":"","seo_image":false,"default_prefix":""},"youtube_link":"","breadcrumbs_title":"Pros and Cons of Microservices","author_name":"PixelPlex Team","post_modified":"2022-08-15 15:57:29"},"contacts":{"email":"info@pixelplex.io","address":[{"entry":"Suite 31"},{"entry":"520 West 28th St."},{"entry":"New York, NY 10001"}],"url":"https://pixelplex.io/contacts/"},"showMoreInfo":[{"id":28889,"slug":"how-to-secure-web-tech-stack","preview":{"url":"https://pixelplex.io/wp-content/uploads/2022/01/how-to-secure-web-tech-stack-main-1600.png","alt":"A person drawing the security icon","resized":{"1000x510":"https://pixelplex.io/wp-content/uploads/auto-resized/28886-1000x510.png","690x517":"https://pixelplex.io/wp-content/uploads/auto-resized/28886-690x517.png","480x360":"https://pixelplex.io/wp-content/uploads/auto-resized/28886-480x360.png","375x280":"https://pixelplex.io/wp-content/uploads/auto-resized/28886-375x280.png","279x207":"https://pixelplex.io/wp-content/uploads/auto-resized/28886-279x207.png","218x156":"https://pixelplex.io/wp-content/uploads/auto-resized/28886-218x156.png","120x120":"https://pixelplex.io/wp-content/uploads/auto-resized/28886-120x120.png"}},"category":{"slug":"web-development","term_id":150,"name":"Web Dev"},"date":"20220120","title":"How to Ensure Security for Your Web Application Technology Stack","timeToRead":"","youtubeLink":""},{"id":8217,"slug":"omnichannel-ecommerce-marketing-strategy","preview":{"url":"https://pixelplex.io/wp-content/uploads/2021/08/omnichannel-ecommerce-marketing-strategy-main-1600.jpg","alt":"A woman enjoying digital shopping while riding in a grocery cart past a mobile device stylized as a physical store surrounded by likes and other social icons","resized":{"1000x510":"https://pixelplex.io/wp-content/uploads/auto-resized/8222-1000x510.jpg","690x517":"https://pixelplex.io/wp-content/uploads/auto-resized/8222-690x517.jpg","480x360":"https://pixelplex.io/wp-content/uploads/auto-resized/8222-480x360.jpg","375x280":"https://pixelplex.io/wp-content/uploads/auto-resized/8222-375x280.jpg","279x207":"https://pixelplex.io/wp-content/uploads/auto-resized/8222-279x207.jpg","218x156":"https://pixelplex.io/wp-content/uploads/auto-resized/8222-218x156.jpg","120x120":"https://pixelplex.io/wp-content/uploads/auto-resized/8222-120x120.jpg"}},"category":{"slug":"digital-transformation","term_id":152,"name":"Digital Transformation"},"date":"20210806","title":"Why Omnichannel Ecommerce is a Must for Businesses","second_categories":[{"term_id":147,"name":"AI","slug":"ai","term_group":0,"term_taxonomy_id":147,"taxonomy":"news-categories","description":"","parent":0,"count":2,"filter":"raw"},{"term_id":154,"name":"AR/VR","slug":"ar-vr","term_group":0,"term_taxonomy_id":154,"taxonomy":"news-categories","description":"","parent":0,"count":0,"filter":"raw"},{"term_id":150,"name":"Web Dev","slug":"web-development","term_group":0,"term_taxonomy_id":150,"taxonomy":"news-categories","description":"","parent":0,"count":0,"filter":"raw"}],"timeToRead":"10","youtubeLink":""},{"id":7905,"slug":"low-code-vs-no-code-app-development","preview":{"url":"https://pixelplex.io/wp-content/uploads/2021/05/low-code-vs-no-code-app-development-main-1600.png","alt":"People building software with the help of website builders","resized":{"1000x510":"https://pixelplex.io/wp-content/uploads/auto-resized/7909-1000x510.png","690x517":"https://pixelplex.io/wp-content/uploads/auto-resized/7909-690x517.png","480x360":"https://pixelplex.io/wp-content/uploads/auto-resized/7909-480x360.png","375x280":"https://pixelplex.io/wp-content/uploads/auto-resized/7909-375x280.png","279x207":"https://pixelplex.io/wp-content/uploads/auto-resized/7909-279x207.png","218x156":"https://pixelplex.io/wp-content/uploads/auto-resized/7909-218x156.png","120x120":"https://pixelplex.io/wp-content/uploads/auto-resized/7909-120x120.png"}},"category":{"slug":"web-development","term_id":150,"name":"Web Dev"},"date":"20210521","title":"Low-Code or No-Code App Development Platform: Which One to Choose?","timeToRead":"","youtubeLink":""},{"id":4190,"slug":"monolithic-vs-microservices","preview":{"url":"https://pixelplex.io/wp-content/uploads/2021/10/monolithic-vs-microservices-main-1600-upd.png","alt":"A person sitting on a block of cubes holds a tablet computer","resized":{"1000x510":"https://pixelplex.io/wp-content/uploads/auto-resized/17696-1000x510.png","690x517":"https://pixelplex.io/wp-content/uploads/auto-resized/17696-690x517.png","480x360":"https://pixelplex.io/wp-content/uploads/auto-resized/17696-480x360.png","375x280":"https://pixelplex.io/wp-content/uploads/auto-resized/17696-375x280.png","279x207":"https://pixelplex.io/wp-content/uploads/auto-resized/17696-279x207.png","218x156":"https://pixelplex.io/wp-content/uploads/auto-resized/17696-218x156.png","120x120":"https://pixelplex.io/wp-content/uploads/auto-resized/17696-120x120.png"}},"category":{"slug":"web-development","term_id":150,"name":"Web Dev"},"date":"20200521","title":"Monolithic vs. Microservices - Which One Is better?","timeToRead":"","youtubeLink":""},{"id":4173,"slug":"tools-to-convert-flash-to-html5","preview":{"url":"https://pixelplex.io/wp-content/uploads/2021/10/tools-to-convert-flash-to-html5-main-1600-upd.png","alt":"A human hand pointing at the HTML logo on a computer monitor","resized":{"1000x510":"https://pixelplex.io/wp-content/uploads/auto-resized/17691-1000x510.png","690x517":"https://pixelplex.io/wp-content/uploads/auto-resized/17691-690x517.png","480x360":"https://pixelplex.io/wp-content/uploads/auto-resized/17691-480x360.png","375x280":"https://pixelplex.io/wp-content/uploads/auto-resized/17691-375x280.png","279x207":"https://pixelplex.io/wp-content/uploads/auto-resized/17691-279x207.png","218x156":"https://pixelplex.io/wp-content/uploads/auto-resized/17691-218x156.png","120x120":"https://pixelplex.io/wp-content/uploads/auto-resized/17691-120x120.png"}},"category":{"slug":"web-development","term_id":150,"name":"Web Dev"},"date":"20200518","title":"The End of Flash. Tools to Convert Flash to HTML5","timeToRead":"","youtubeLink":""}],"officesLocations":[{"id":86,"name":"New York, United States","city":"New York","country":"United States","address":[{"entry":"520 West 28th St."},{"entry":"Suite 31"},{"entry":"New York, NY 10001"}],"phone":{"raw":"+16464900772","formatted":"+1 646 490 0772"},"order":"1"},{"id":7479,"name":"London, United Kingdom","city":"London","country":"United Kingdom","address":[{"entry":"Kemp House,"},{"entry":"152 - 160 City Road"},{"entry":"London EC1V 2NX, UK"}],"phone":{"raw":"+442045388887","formatted":"+44 20 4538 8887"},"order":"2"},{"id":87,"name":"Pfäffikon, Switzerland","city":"Pfäffikon","country":"Switzerland","address":[{"entry":"Zentrum zum Staldenbach 11"},{"entry":"8808 Pfäffikon SZ"},{"entry":"Switzerland"}],"phone":{"raw":"+41797310314","formatted":"+41 79 731-03-14"},"order":"3"},{"id":2027,"name":"Dubai, United Arab Emirates","city":"Dubai","country":"United Arab Emirates","address":[{"entry":"Dubai Silicon Oasis, DDP"},{"entry":"Building A2, Unit 101"},{"entry":"Dubai, UAE"}],"phone":{"raw":"+971585788150","formatted":"+971 58 5788150"},"order":"4"},{"id":4703,"name":"Tokyo, Japan","city":"Tokyo","country":"Japan","address":[{"entry":"3-1-30 Avex Building 2F avex EYE"},{"entry":"Minami-Aoyama, Minato-ku"},{"entry":"Tokyo 107-8577, Japan"}],"phone":{"raw":"+819075407726","formatted":"+81 90 7540-7726"},"order":"5"}],"imgSrcSetPreload":{"sm":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-560x240.jpg","md":"https://pixelplex.io/wp-content/uploads/auto-resized/31598-1000x510.jpg","xxl":"https://pixelplex.io/wp-content/uploads/2020/05/pros-and-cons-of-microservices-main-1600-upd-1.jpg"},"isPicturePreload":true},"__N_SSG":true,"dateNow":1663839536855}